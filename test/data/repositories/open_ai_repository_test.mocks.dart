// Mocks generated by Mockito 5.3.2 from annotations
// in open_ai_simplified/test/data/repositories/open_ai_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:open_ai_simplified/data/remote/open_ia_service.dart' as _i4;
import 'package:open_ai_simplified/domain/models/models.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompletionResponse_1 extends _i1.SmartFake
    implements _i3.CompletionResponse {
  _FakeCompletionResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAiModels_2 extends _i1.SmartFake implements _i3.OpenAiModels {
  _FakeOpenAiModels_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEditsResponse_3 extends _i1.SmartFake implements _i3.EditsResponse {
  _FakeEditsResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OpenIAService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenIAService extends _i1.Mock implements _i4.OpenIAService {
  MockOpenIAService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  _i5.Future<_i3.CompletionResponse> getCompletion({
    required String? prompt,
    required String? apiKey,
    required _i3.ConfigCompletion? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletion,
          [],
          {
            #prompt: prompt,
            #apiKey: apiKey,
            #config: config,
          },
        ),
        returnValue:
            _i5.Future<_i3.CompletionResponse>.value(_FakeCompletionResponse_1(
          this,
          Invocation.method(
            #getCompletion,
            [],
            {
              #prompt: prompt,
              #apiKey: apiKey,
              #config: config,
            },
          ),
        )),
      ) as _i5.Future<_i3.CompletionResponse>);
  @override
  _i5.Future<_i3.OpenAiModels> getModelsList({required String? apiKey}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getModelsList,
          [],
          {#apiKey: apiKey},
        ),
        returnValue: _i5.Future<_i3.OpenAiModels>.value(_FakeOpenAiModels_2(
          this,
          Invocation.method(
            #getModelsList,
            [],
            {#apiKey: apiKey},
          ),
        )),
      ) as _i5.Future<_i3.OpenAiModels>);
  @override
  _i5.Future<_i3.EditsResponse> getEdits({
    required String? apiKey,
    required _i3.ConfigEdits? config,
    required Map<String, dynamic>? inputWithInstruction,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEdits,
          [],
          {
            #apiKey: apiKey,
            #config: config,
            #inputWithInstruction: inputWithInstruction,
          },
        ),
        returnValue: _i5.Future<_i3.EditsResponse>.value(_FakeEditsResponse_3(
          this,
          Invocation.method(
            #getEdits,
            [],
            {
              #apiKey: apiKey,
              #config: config,
              #inputWithInstruction: inputWithInstruction,
            },
          ),
        )),
      ) as _i5.Future<_i3.EditsResponse>);
}
